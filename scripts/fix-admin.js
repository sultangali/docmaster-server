import dotenv from 'dotenv';
import connectDB from '../config/database.js';
import User from '../models/User.js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

const fixAdmin = async () => {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
    await connectDB();
    
    // –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∞–¥–º–∏–Ω–∞
    const existingAdmin = await User.findOne({ role: 'admins' });
    
    if (existingAdmin) {
      console.log('üìù –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∞–¥–º–∏–Ω:', existingAdmin.username);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É –Ω–µ–≥–æ –ø–∞—Ä–æ–ª—å
      if (!existingAdmin.password) {
        console.log('‚ùå –£ –∞–¥–º–∏–Ω–∞ –Ω–µ—Ç –ø–∞—Ä–æ–ª—è, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º admin123');
        existingAdmin.password = 'admin123';
        await existingAdmin.save();
        console.log('‚úÖ –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω');
      } else {
        console.log('üîê –£ –∞–¥–º–∏–Ω–∞ —É–∂–µ –µ—Å—Ç—å –ø–∞—Ä–æ–ª—å, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ');
        existingAdmin.password = 'admin123';
        await existingAdmin.save();
        console.log('‚úÖ –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ admin123');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ username –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
      if (existingAdmin.username !== 'admin') {
        existingAdmin.username = 'admin';
        await existingAdmin.save();
        console.log('‚úÖ Username –∞–¥–º–∏–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ admin');
      }
      
    } else {
      console.log('üë§ –ê–¥–º–∏–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ');
      await User.createDefaultAdmin();
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    const admin = await User.findOne({ username: 'admin', role: 'admins' });
    
    if (admin && admin.password) {
      console.log('üéâ –ê–¥–º–∏–Ω –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:');
      console.log('   Username: admin');
      console.log('   Password: admin123');
      console.log('   –•—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å:', admin.password.substring(0, 20) + '...');
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
      const isPasswordValid = await admin.comparePassword('admin123');
      console.log('üß™ –¢–µ—Å—Ç –ø–∞—Ä–æ–ª—è:', isPasswordValid ? '‚úÖ –£—Å–ø–µ—à–Ω–æ' : '‚ùå –û—à–∏–±–∫–∞');
      
    } else {
      console.log('‚ùå –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫');
    }
    
    process.exit(0);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞:', error);
    process.exit(1);
  }
};

fixAdmin();
